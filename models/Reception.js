const mongoose = require("mongoose");

const Status = {
  doing: "doing",
  rejected: "rejected",
  canceled: "canceled",
  dalayed: "dalayed",
  succeded: "succeded",
  returened: "returened",
};

const receptionSchema = new mongoose.Schema({
  reception_id: { type: Number, required: true },
  status: { type: String, required: true },
  customerPhoneNumber: { type: String, required: true },
  comments: { type: String, required: true },
  vehicleName: { type: String, required: true },
  license: { type: String, required: true },
  VIN: { type: String, required: true },
  mileage: { type: Number, required: true },
  situation: { type: String, required: true },
  pricePrediction: { type: Number, required: true },
  prePaid: { type: Number, required: true },
  things: { type: String, required: true },
  spare: { type: String, required: false },
  jack: { type: String, required: false },
  toolBox: { type: String, required: false },
  light: { type: String, required: false },
  audioPlayer: { type: String, required: false },
  sunroofTool: { type: String, required: false },
  manual: { type: String, required: false },
  sideMirror: { type: String, required: false },
  footStool: { type: String, required: false },
  dangerTriangle: { type: String, required: false },
  logo: { type: String, required: false },
  remote: { type: String, required: false },
  cable: { type: String, required: false },
  hubcap: { type: String, required: false },
  sportRing: { type: String, required: false },
  traffic: { type: String, required: false },
  siren: { type: String, required: false },
  ashTray: { type: String, required: false },
  fireExtinguisher: { type: String, required: false },
  rearWiper: { type: String, required: false },
  seatCover: { type: String, required: false },
  wheelWrench: { type: String, required: false },
  frontWiper: { type: String, required: false },
  ringLock: { type: String, required: false },
  antenna: { type: String, required: false },
  lace: { type: String, required: false },
  finalPayment: { type: Number },
  successComment: { type: String },
  toDoingComment: { type: String },
  cancelPayment: { type: Number },
  cancelComment: { type: String },
  rejectPayment: { type: Number },
  rejectComment: { type: String },
});
const Reception = mongoose.model("Receptions", receptionSchema);
module.exports = { Reception, Status };
